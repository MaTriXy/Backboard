plugins {
    id "com.android.library"
    id "checkstyle"
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 102
        versionName "0.1.2"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    libraryVariants.all { variant ->
        task("javadoc${variant.name}", type: Javadoc) {
            source android.sourceSets.main.java.srcDirs
            classpath = variant.javaCompileProvider.get().classpath + files(project.android.getBootClasspath()) + files("$buildDir/intermediates/classes/${variant.name}")
            options.links("http://docs.oracle.com/javase/7/docs/api/")
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
        }
    }
}

checkstyle {
    toolVersion = "6.7"
}

task checkstyle(type: Checkstyle) {
    configFile = rootProject.file('backboard/checkstyle.xml')

    source 'src/main/java'

    include '**/*.java'

    exclude '**/gen/**'

    def configProps = ['proj.module.dir': projectDir.absolutePath]
    configProperties configProps

    // empty classpath
    classpath = files()
}

check.dependsOn 'checkstyle'

// disable insane, build-breaking doclint tool in Java 8
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        //noinspection SpellCheckingInspection
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

dependencies {
    implementation rootProject.ext.facebookRebound
    implementation rootProject.ext.supportAnnotation

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
